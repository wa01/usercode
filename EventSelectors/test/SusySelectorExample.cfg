process PAT = {


  ### General ###

  # initialize MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"

  # return filter & timing reports
  untracked PSet options = { untracked bool wantSummary = true }


  ### Input ###

  untracked PSet maxEvents = { untracked int32 input = 100 }

  source = PoolSource { untracked vstring fileNames = { 
#'file:/afs/cern.ch/user/g/gpetrucc/scratch0/cmssw-data/CSA07-Chouder-Muon-1.6.4-AODSIM.100.root' 
"/store/CSA07/skim/2007/11/8/CSA07-CSA07JetMET-Stew-B1-PDJetMET_Skims1/0005/0034995F-4591-DC11-8398-0018F3D0960A.root"

} }

  ### PAT steering ###

  include "PhysicsTools/PatAlgos/data/patLayer0.cff"
  #include "PhysicsTools/PatAlgos/test/patLayer0_ReplaceDefaults_full.cff"
  include "PhysicsTools/PatAlgos/data/patLayer1.cff"
  #include "PhysicsTools/PatAlgos/test/patLayer1_ReplaceDefaults_full.cff"

  module myAnalyzer = SusySelectorExample {
    VPSet Selectors = {
	# HLT selector
	{
	  string selector = "HLTEventSelector"
	  untracked string name = "HLT"
	  InputTag triggerResults = TriggerResults::HLT
      	  vstring pathNames = { 
            "HLT1MET1HT", "HLT2jet"
	  }
	},
	# MET selector
	{
	  string selector = "METEventSelector"
	  untracked string name = "MET"
	  InputTag src = selectedLayer1METs
      	  double minMET = 50.
	},
	#combined jet selector
	{
	  string selector = "EventSelectorAND"
          untracked string name = "Jet"
	  VPSet Selectors = {
	    # selector by jet Et
	    {
	      string selector = "JetEventSelector"
	      InputTag src = selectedLayer1Jets
	      string correction = "g"
      	      vdouble minEt = { 100., 50. }
      	      vdouble maxEta = { 5., 5. }
	      vdouble maxEMFraction = { 999., 999. }
            },
	    # selector by jet b-tag
	    {
	      string selector = "BJetEventSelector"
  	      InputTag src = selectedLayer1Jets 
 	      string tagLabel = "trackCountingHighEffJetTags"
      	      vdouble minTag = { -1.e30, -1.e30 }
            }
          }
        }
    }
  }

  path p = {
    patLayer0_TriggerMatch,                            
    patLayer1,
    myAnalyzer
  }


#   ### Output ###
# 
#   # define the event content
#   block patEventContent = {
#     untracked vstring outputCommands = {
#       "drop *"
#     }
#   }
#   include "PhysicsTools/PatAlgos/data/patLayer1_EventContent.cff"
#   replace patEventContent.outputCommands += patLayer1EventContent.outputCommands
# 
#   # only accept events passing the complete path
#   block patEventSelection = {
#     untracked PSet SelectEvents = {
#       vstring SelectEvents = { "p" }
#     }
#   }
# 
#   # the actual output module
#   module out = PoolOutputModule {
#     untracked string fileName = "PATLayer1_Output.fromAOD_full.root"
#     using patEventSelection
#     using patEventContent
#     untracked bool verbose = false
#   }
# 
#   endpath outpath = { out }
# 

}
